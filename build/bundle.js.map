{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/index.mjs","../../src/pages/Home.svelte","../../node_modules/svelte-scrollto/src/helper.js","../../node_modules/svelte-scrollto/src/index.js","../../node_modules/svelte/easing/index.mjs","../../src/components/SectionChooser.svelte","../../src/pages/sections/Summary.svelte","../../node_modules/@ampirzadeh/math/dist/main.js","../../src/components/SectionBase.svelte","../../src/pages/sections/Properties.svelte","../../src/pages/sections/Name.svelte","../../src/pages/sections/Notation.svelte","../../src/pages/sections/PrimeFactorization.svelte","../../src/pages/sections/Divisors.svelte","../../src/pages/sections/Divisibility.svelte","../../src/pages/sections/BaseConversion.svelte","../../src/pages/sections/BaseCalculations.svelte","../../src/pages/Num.svelte","../../src/routes.ts","../../src/components/Hero.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root.host) {\n        return root;\n    }\n    return document;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<script context=\"module\">\nimport {readable, writable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Store that returns the currently-matched params.\n * Despite this being writable, consumers should not change the value of the store.\n * It is exported as a readable store only (in the typings file)\n */\nexport const params = writable(undefined)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        const newState = {\n            ...history.state\n        }\n        delete newState['__svelte_spa_router_scrollX']\n        delete newState['__svelte_spa_router_scrollY']\n        window.history.replaceState(newState, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Dictionary with options for the link action.\n * @typedef {Object} LinkActionOpts\n * @property {string} href - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n * @property {boolean} disabled - If true, link is disabled\n */\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string|LinkActionOpts} opts - Options object. For legacy reasons, we support a string too which will be the value for opts.href\n */\nexport function link(node, opts) {\n    opts = linkOpts(opts)\n\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, opts)\n\n    return {\n        update(updated) {\n            updated = linkOpts(updated)\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, opts) {\n    let href = opts.href || node.getAttribute('href')\n\n    // Destination must start with '/' or '#/'\n    if (href && href.charAt(0) == '/') {\n        // Add # to the href attribute\n        href = '#' + href\n    }\n    else if (!href || href.length < 2 || href.slice(0, 2) != '#/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    node.setAttribute('href', href)\n    node.addEventListener('click', (event) => {\n        // Prevent default anchor onclick behaviour\n        event.preventDefault()\n        if (!opts.disabled) {\n            scrollstateHistoryHandler(event.currentTarget.getAttribute('href'))\n        }\n    })\n}\n\n// Internal function that ensures the argument of the link action is always an object\nfunction linkOpts(val) {\n    if (val && typeof val == 'string') {\n        return {\n            href: val\n        }\n    }\n    else {\n        return val || {}\n    }\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {string} href - Destination\n */\nfunction scrollstateHistoryHandler(href) {\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({...history.state, __svelte_spa_router_scrollX: window.scrollX, __svelte_spa_router_scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {onDestroy, createEventDispatcher, afterUpdate} from 'svelte'\nimport {parse} from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = parse(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {boolean} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\nlet popStateChanged = null\nif (restoreScrollState) {\n    popStateChanged = (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.__svelte_spa_router_scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    }\n    // This is removed in the destroy() invocation below\n    window.addEventListener('popstate', popStateChanged)\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.__svelte_spa_router_scrollX, previousScrollState.__svelte_spa_router_scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nconst unsubscribeLoc = loc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData,\n            params: (match && typeof match == 'object' && Object.keys(match).length) ? match : null\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n\n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name,\n                    params: componentParams\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name,\n            params: componentParams\n        })).then(() => {\n            params.set(componentParams)\n        })\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n    params.set(undefined)\n})\n\nonDestroy(() => {\n    unsubscribeLoc()\n    popStateChanged && window.removeEventListener('popstate', popStateChanged)\n})\n</script>\n","export function parse(str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n\nvar RGX = /*#__PURE__*/ /(\\/|^)([:*][^/]*?)(\\?)?(?=[/.]|$)/g;\n\n// error if key missing?\nexport function inject(route, values) {\n\treturn route.replace(RGX, (x, lead, key, optional) => {\n\t\tx = values[key=='*' ? 'wild' : key.substring(1)];\n\t\treturn x ? '/'+x : (optional || key=='*') ? '' : '/' + key;\n\t});\n}\n","<script lang=\"ts\">\n  import { push, link } from \"svelte-spa-router\";\n  let numb: number = Math.round(Math.random() * 2000);\n</script>\n\n<form class=\"mx-auto w-3/4\" on:submit|preventDefault={() => push(`/${numb}`)}>\n  <input\n    min=\"0\"\n    type=\"number\"\n    id=\"number\"\n    name=\"number\"\n    bind:value={numb}\n    class=\"text-black rounded-md w-full px-2 py-1 text-center bg-gray-800 text-white focus:(outline-none ring) transition-shadow duration-200\"\n  />\n</form>\n\n<div class=\"flex gap-4 flex-wrap mt-10\">\n  {#each Array(999) as _, i}\n    <a\n      class=\"text-cyan-500 underline-cyan-500 underline btn\"\n      use:link\n      href={`/${i + 2}`}>{i + 2}</a\n    >\n  {/each}\n</div>\n","export default {\n  $(selector) {\n    if (typeof selector === \"string\") {\n      return document.querySelector(selector);\n    }\n    return selector;\n  },\n  extend(...args) {\n    return Object.assign(...args);\n  },\n  cumulativeOffset(element) {\n    let top = 0;\n    let left = 0;\n\n    do {\n      top += element.offsetTop || 0;\n      left += element.offsetLeft || 0;\n      element = element.offsetParent;\n    } while (element);\n\n    return {\n      top: top,\n      left: left\n    };\n  },\n  directScroll(element) {\n    return element && element !== document && element !== document.body;\n  },\n  scrollTop(element, value) {\n    let inSetter = value !== undefined;\n    if (this.directScroll(element)) {\n      return inSetter ? (element.scrollTop = value) : element.scrollTop;\n    } else {\n      return inSetter\n        ? (document.documentElement.scrollTop = document.body.scrollTop = value)\n        : window.pageYOffset ||\n            document.documentElement.scrollTop ||\n            document.body.scrollTop ||\n            0;\n    }\n  },\n  scrollLeft(element, value) {\n    let inSetter = value !== undefined;\n    if (this.directScroll(element)) {\n      return inSetter ? (element.scrollLeft = value) : element.scrollLeft;\n    } else {\n      return inSetter\n        ? (document.documentElement.scrollLeft = document.body.scrollLeft = value)\n        : window.pageXOffset ||\n            document.documentElement.scrollLeft ||\n            document.body.scrollLeft ||\n            0;\n    }\n  }\n};\n","import { cubicInOut } from \"svelte/easing\";\nimport { noop, loop, now } from \"svelte/internal\";\nimport _ from \"./helper\";\n\nconst defaultOptions = {\n  container: \"body\",\n  duration: 500,\n  delay: 0,\n  offset: 0,\n  easing: cubicInOut,\n  onStart: noop,\n  onDone: noop,\n  onAborting: noop,\n  scrollX: false,\n  scrollY: true\n};\n\nconst _scrollTo = options => {\n  let {\n    offset,\n    duration,\n    delay,\n    easing,\n    x=0,\n    y=0,\n    scrollX,\n    scrollY,\n    onStart,\n    onDone,\n    container,\n    onAborting,\n    element\n  } = options;\n\n  if (typeof offset === \"function\") {\n    offset = offset();\n  }\n\n  var cumulativeOffsetContainer = _.cumulativeOffset(container);\n  var cumulativeOffsetTarget = element\n    ? _.cumulativeOffset(element)\n    : { top: y, left: x };\n\n  var initialX = _.scrollLeft(container);\n  var initialY = _.scrollTop(container);\n\n  var targetX =\n    cumulativeOffsetTarget.left - cumulativeOffsetContainer.left + offset;\n  var targetY =\n    cumulativeOffsetTarget.top - cumulativeOffsetContainer.top + offset;\n\n  var diffX = targetX - initialX;\n\tvar diffY = targetY - initialY;\n\n  let scrolling = true;\n  let started = false;\n  let start_time = now() + delay;\n  let end_time = start_time + duration;\n\n  function scrollToTopLeft(element, top, left) {\n    if (scrollX) _.scrollLeft(element, left);\n    if (scrollY) _.scrollTop(element, top);\n  }\n\n  function start(delayStart) {\n    if (!delayStart) {\n      started = true;\n      onStart(element, {x, y});\n    }\n  }\n\n  function tick(progress) {\n    scrollToTopLeft(\n      container,\n      initialY + diffY * progress,\n      initialX + diffX * progress\n    );\n  }\n\n  function stop() {\n    scrolling = false;\n  }\n\n  loop(now => {\n    if (!started && now >= start_time) {\n      start(false)\n    }\n\n    if (started && now >= end_time) {\n      tick(1);\n      stop();\n      onDone(element, {x, y});\n    }\n\n    if (!scrolling) {\n      onAborting(element, {x, y});\n      return false;\n    }\n    if (started) {\n      const p = now - start_time;\n      const t = 0 + 1 * easing(p / duration);\n      tick(t);\n    }\n\n    return true;\n  });\n\n  start(delay);\n\n  tick(0);\n\n  return stop;\n};\n\nconst proceedOptions = options => {\n\tlet opts = _.extend({}, defaultOptions, options);\n  opts.container = _.$(opts.container);\n  opts.element = _.$(opts.element);\n  return opts;\n};\n\nconst scrollContainerHeight = containerElement => {\n  if (\n    containerElement &&\n    containerElement !== document &&\n    containerElement !== document.body\n  ) {\n    return containerElement.scrollHeight - containerElement.offsetHeight;\n  } else {\n    let body = document.body;\n    let html = document.documentElement;\n\n    return Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    );\n  }\n};\n\nexport const setGlobalOptions = options => {\n\t_.extend(defaultOptions, options || {});\n};\n\nexport const scrollTo = options => {\n  return _scrollTo(proceedOptions(options));\n};\n\nexport const scrollToBottom = options => {\n  options = proceedOptions(options);\n\n  return _scrollTo(\n    _.extend(options, {\n      element: null,\n      y: scrollContainerHeight(options.container)\n    })\n  );\n};\n\nexport const scrollToTop = options => {\n  options = proceedOptions(options);\n\n  return _scrollTo(\n    _.extend(options, {\n      element: null,\n      y: 0\n    })\n  );\n};\n\nexport const makeScrollToAction = scrollToFunc => {\n  return (node, options) => {\n    let current = options;\n    const handle = e => {\n      e.preventDefault();\n      scrollToFunc(\n        typeof current === \"string\" ? { element: current } : current\n      );\n    };\n    node.addEventListener(\"click\", handle);\n    node.addEventListener(\"touchstart\", handle);\n    return {\n      update(options) {\n        current = options;\n      },\n      destroy() {\n        node.removeEventListener(\"click\", handle);\n        node.removeEventListener(\"touchstart\", handle);\n      }\n    };\n  };\n};\n\nexport const scrollto = makeScrollToAction(scrollTo);\nexport const scrolltotop = makeScrollToAction(scrollToTop);\nexport const scrolltobottom = makeScrollToAction(scrollToBottom);\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","<script lang=\"ts\">\n  import { scrollto } from \"svelte-scrollto\";\n\n  const sections = [\n    \"Properties\",\n    \"Name\",\n    \"Notation\",\n    \"Prime Factorization\",\n    \"Divisors\",\n    \"Other Arithmetic Functions\",\n    \"Divisibility test\",\n    \"Base converter\",\n    \"Classification\",\n  ];\n</script>\n\n<ul class=\"mt-3 flex flex-wrap content-center\">\n  {#each sections as section}\n    <li\n      class=\"bg-cyan-500 bg-opacity-30 cursor-pointer text-sm px-3 text-center rounded-xl text-center m-1\"\n      use:scrollto={{ element: section.toLocaleLowerCase() }}\n    >\n      {section}\n    </li>\n  {/each}\n</ul>\n","<script lang=\"ts\">\n  import { link } from \"svelte-spa-router\";\n  import SectionChooser from \"../../components/SectionChooser.svelte\";\n  import {\n    allPositiveDivisors,\n    coprime,\n    isPrime,\n    primeFactors,\n    say,\n    sumOfDigits,\n  } from \"@ampirzadeh/math\";\n\n  export let numb: number;\n\n  $: num = +numb;\n\n  const S = (n: number) => (n === 1 ? \"\" : \"s\");\n  $: primeFact = primeFactors(num, false);\n  $: positiveDiv = allPositiveDivisors(num);\n  $: coPr = coprime(num);\n  const formatter = new Intl.NumberFormat();\n  $: info = {\n    formatted: formatter.format(num),\n    say: say(num, false),\n    parity: num % 2 === 0 ? \"even\" : \"odd\",\n    numberOfDigits: say(num.toString().length, false),\n    primarity: isPrime(num) ? \"prime\" : \"composite\",\n    sciNo: num.toExponential().split(\"e+\"),\n    sumOfDigits: sumOfDigits(num),\n    nOfPrimeFactors: primeFact.length,\n    primeFactorsS: S(primeFact.length),\n    nOfPositiveDivisors: positiveDiv.length,\n    positiveDivisorsS: S(positiveDiv.length),\n    nOfCoPrimes: coPr.length,\n    coPrimeS: S(coPr.length),\n    coPrimesIsAre: coPr.length === 1 ? \"is\" : \"are\",\n  };\n</script>\n\n<section class=\"bg-warm-gray-800 rounded p-5 w-full\" id=\"summary\">\n  <p>\n    <span class=\"font-semibold\">{info.formatted}</span>\n    (<span class=\"text-cyan-500 text-sm\">{info.say}</span>) is an {info.parity}\n    {info.numberOfDigits}-digit {info.primarity} number following\n    <a use:link class=\"text-cyan-500\" href={`/${(num - 1).toString()}`}\n      >{num - 1}</a\n    >\n    and preceding\n    <a use:link class=\"text-cyan-500\" href={`/${(num + 1).toString()}`}\n      >{num + 1}</a\n    >. In scientific notation, it is written as {info.sciNo[0]} × 10<sup\n      >{info.sciNo[1]}</sup\n    >. The sum of it's digits is {info.sumOfDigits}. It has a total of {info.nOfPrimeFactors}\n    prime factor{info.primeFactorsS} and {info.nOfPositiveDivisors} positive divisor{info.positiveDivisorsS}.\n    There {info.coPrimesIsAre}\n    {formatter.format(info.nOfCoPrimes)} positive integer{info.coPrimeS} (up to {num})\n    that are relativly prime to {num}.\n  </p>\n\n  <SectionChooser />\n</section>\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.divisibility = exports.harmonicMean = exports.sumOfDivisors = exports.radical = exports.liouvilleLambda = exports.countOccurrences = exports.engineeringNotation = exports.digitalRoot = exports.isPrime = exports.say = exports.allPositiveDivisors = exports.primeFactors = exports.coprime = exports.gcd = exports.sumOfDigits = void 0;\n/**\n * Calculates the sum of the number's digits once. You might actually need `digitalRoot` instead.\n * @param num Number or string to calculate the sum of digits\n * @returns Sum of digits\n * @example 98: `9+8` = 17\n */\nconst sumOfDigits = (num) => num\n    .toString()\n    .split(\"\")\n    .map((digit) => parseInt(digit))\n    .reduce((a, b) => a + b, 0);\nexports.sumOfDigits = sumOfDigits;\n/**\n * Recursively calculates GCD of two numbers\n * @param num1 First number\n * @param num2 Second number\n * @returns GCD\n */\nconst gcd = (num1, num2) => num1 === 0 ? num2 : exports.gcd(num2 % num1, num1);\nexports.gcd = gcd;\n/**\n * Find all coprimes of the input number\n * @param num Input\n * @returns CoPrime\n */\nconst coprime = (num) => {\n    const coprimes = [];\n    for (let i = 1; i < num; i++) {\n        // If gcd is 1 add i to coprimes\n        exports.gcd(i, num) === 1 && coprimes.push(i);\n    }\n    return coprimes;\n};\nexports.coprime = coprime;\n/**\n * Calculates the prime factors of the input\n * @param num Input number\n * @param unique Whether the result should be filtered to only contain the unique prime factors\n * @returns Prime factors\n */\nconst primeFactors = (num, unique) => {\n    const primeFactors = [];\n    for (let i = 2; i <= num; i++) {\n        while (num % i === 0) {\n            primeFactors.push(i);\n            num /= i;\n        }\n    }\n    return unique ? [...new Set(primeFactors)] : primeFactors;\n};\nexports.primeFactors = primeFactors;\n/**\n * Return all positive divisors of the input number regardless of whether they are prime or not. You might need `primeFactors` instead.\n * @param num Input number\n * @returns Positive divisors of the number\n */\nconst allPositiveDivisors = (num) => {\n    const divisors = [];\n    for (let i = 1; i <= Math.floor(Math.sqrt(num)); i += 1)\n        if (num % i === 0) {\n            divisors.push(i);\n            if (num / i !== i)\n                divisors.push(num / i);\n        }\n    divisors.sort((x, y) => x - y); // numeric sort\n    return divisors;\n};\nexports.allPositiveDivisors = allPositiveDivisors;\n/**\n * @param num Input number\n * @param short Whether the input should be shortened\n * @returns The number being read\n * @example say(123, false) // One hundred thirty three\n * say(123, true) // 1 hundred 23\n */\nconst say = (num, short) => {\n    const ones = [\n        \"\",\n        \"one\",\n        \"two\",\n        \"three\",\n        \"four\",\n        \"five\",\n        \"six\",\n        \"seven\",\n        \"eight\",\n        \"nine\",\n    ];\n    const tens = [\n        \"\",\n        \"\",\n        \"twenty\",\n        \"thirty\",\n        \"forty\",\n        \"fifty\",\n        \"sixty\",\n        \"seventy\",\n        \"eighty\",\n        \"ninety\",\n    ];\n    const teens = [\n        \"ten\",\n        \"eleven\",\n        \"twelve\",\n        \"thirteen\",\n        \"fourteen\",\n        \"fifteen\",\n        \"sixteen\",\n        \"seventeen\",\n        \"eighteen\",\n        \"nineteen\",\n    ];\n    function convertTens(num) {\n        return num < 10\n            ? ones[num]\n            : num >= 10 && num < 20\n                ? teens[num - 10]\n                : tens[Math.floor(num / 10)] +\n                    (num % 10 === 0 ? \" \" : \"-\") +\n                    ones[num % 10];\n    }\n    function convertHundreds(num) {\n        return num > 99 && !short\n            ? `${ones[Math.floor(num / 100)]} hundred ${convertTens(num % 100)}`\n            : short\n                ? num.toString()\n                : convertTens(num);\n    }\n    function convertThousands(num) {\n        return num >= 1000\n            ? `${convertHundreds(Math.floor(num / 1000))} thousand ${convertHundreds(num % 1000)}`\n            : convertHundreds(num);\n    }\n    function convertMillions(num) {\n        return num >= 1000000\n            ? `${convertMillions(Math.floor(num / 1000000))} million ${convertThousands(num % 1000000)}`\n            : convertThousands(num);\n    }\n    function convertBillions(num) {\n        return num >= 1000000000\n            ? `${convertBillions(Math.floor(num / 1000000000))} billion ${convertMillions(num % 1000000000)}`\n            : convertMillions(num);\n    }\n    function convertTrillions(num) {\n        return num >= 1000000000000\n            ? `${convertTrillions(Math.floor(num / 1000000000000))} trillion ${convertBillions(num % 1000000000000)}`\n            : convertBillions(num);\n    }\n    function convertQuadrillions(num) {\n        return num >= 1000000000000000\n            ? `${convertQuadrillions(Math.floor(num / 1000000000000000))} quadrillion ${convertTrillions(num % 1000000000000000)}`\n            : convertTrillions(num);\n    }\n    return num === 0 ? \"zero\" : convertQuadrillions(num).replace(/\\s{2,}/g, \" \");\n};\nexports.say = say;\n/**\n * @param num Input number\n * @returns Whether the input number is prime\n */\nconst isPrime = (num) => {\n    if (num === 2)\n        return true;\n    const boundary = Math.floor(Math.sqrt(num));\n    for (let i = 2; i <= boundary; i++)\n        if (num % i === 0)\n            return false;\n    return num >= 2;\n};\nexports.isPrime = isPrime;\n/**\n * Recursively calculates digital root using sumOfDigits function\n * @param num Number\n * @returns The digital root of the input number\n * @example digitalRoot(89) // 8+9=17. 1+7=8\n */\nconst digitalRoot = (num) => num < 10 ? num : exports.digitalRoot(exports.sumOfDigits(num));\nexports.digitalRoot = digitalRoot;\n/**\n * @param num Number\n * @returns The engineering notaion of the input number\n */\nconst engineeringNotation = (num) => {\n    let result;\n    num.toString().length > 3\n        ? (result = {\n            base: parseFloat(num\n                .toString()\n                .replace(num.toString().slice(num.toString().length % 3), `.${num.toString().slice(num.toString().length % 3)}`)),\n            power: num.toString().slice(num.toString().length % 3).length,\n        })\n        : (result = {\n            base: num,\n            power: 0,\n        });\n    return result;\n};\nexports.engineeringNotation = engineeringNotation;\n/**\n * Count the occurrences of each number is an array\n * @param nums Input number\n * @returns An object with numbers as keys and number of occurrences as values\n */\nconst countOccurrences = (nums) => {\n    const result = {};\n    // Check if input is array.\n    if (nums instanceof Array) {\n        // Create an array for non-existing property and fill existing arrays.\n        nums.forEach((key, index) => {\n            // !result[key] ? (result[key] = [index]) : result[key].push(index)\n            if (!result[key]) {\n                // Initial object property creation.\n                result[key] = [index]; // Create an array for that property.\n            }\n            else {\n                // Same occurrences found.\n                result[key].push(index); // Fill the array.\n            }\n        });\n    }\n    return result;\n};\nexports.countOccurrences = countOccurrences;\n/**\n * If number of prime factors is even returns 1, otherwise returns -1\n * @param num Number\n * @returns -1 or 1\n */\nconst liouvilleLambda = (num) => exports.primeFactors(num, false).length % 2 === 0 ? 1 : -1;\nexports.liouvilleLambda = liouvilleLambda;\n/**\n * Radic of the number\n * @param num Input number\n * @returns All prime factors of the number multiplied\n */\nconst radical = (num) => exports.primeFactors(num, true).reduce((totalValue, currentValue) => totalValue * currentValue);\nexports.radical = radical;\n/**\n * @param num Number\n * @param aliquot Whether is should be aliquot or not\n * @returns Sum of all of the divisors of the number\n */\nconst sumOfDivisors = (num, aliquot) => exports.allPositiveDivisors(num).reduce((totalValue, currentValue) => !aliquot\n    ? totalValue + currentValue\n    : currentValue !== num\n        ? totalValue + currentValue\n        : 0);\nexports.sumOfDivisors = sumOfDivisors;\n/**\n * @param num Input number\n * @returns Harmonic Mean of the input\n */\nconst harmonicMean = (num) => {\n    let sum = 0;\n    exports.allPositiveDivisors(num).map((n) => (sum += 1 / n));\n    return exports.allPositiveDivisors(num).length / sum;\n};\nexports.harmonicMean = harmonicMean;\n/**\n * Returns the remainder of the number if divided by numbers between 2 and 10\n * @param num Input number\n * @returns Array of objects of the result\n */\nconst divisibility = (num) => {\n    const result = [];\n    for (let n = 2; n < 10; n++) {\n        result.push({\n            number: n,\n            remainder: num % n,\n        });\n    }\n    return result;\n};\nexports.divisibility = divisibility;\n","<script lang=\"ts\">\n  let id: string;\n  export { id };\n</script>\n\n<section class=\"p-5 w-full\" {id}>\n  <slot name=\"title\" />\n\n  <hr class=\"mt-1 mb-3\" />\n\n  <slot name=\"body\" />\n</section>\n","<script lang=\"ts\">\n  import { sumOfDigits, digitalRoot, isPrime } from \"@ampirzadeh/math\";\n\n  export let numb: number;\n  $: num = +numb;\n\n  import BaseSection from \"../../components/SectionBase.svelte\";\n</script>\n\n<BaseSection id=\"properties\">\n  <h3 class=\"text-lg\" slot=\"title\">Basic Properties</h3>\n\n  <div slot=\"body\" class=\"flex flex-col lg:flex-row flex-wrap gap-5\">\n    <div\n      class=\"flex-1 text-center bg-gray-800 rounded flex flex-col justify-between\"\n    >\n      <code class=\"text-sm font-semibold my-2\">Is Prime?</code>\n      <span class=\"bg-cyan-500 bg-opacity-30 p-1 rounded-b\">\n        {isPrime(num) ? \"Yes\" : \"No\"}\n      </span>\n    </div>\n    <div\n      class=\"flex-1 text-center bg-gray-800 rounded flex flex-col justify-between\"\n    >\n      <code class=\"text-sm font-semibold my-2\">Number parity</code>\n      <span class=\"bg-cyan-500 bg-opacity-30 p-1 rounded-b\">\n        {num % 2 === 0 ? \"Even\" : \"Odd\"}\n      </span>\n    </div>\n    <div\n      class=\"flex-1 text-center bg-gray-800 rounded flex flex-col justify-between\"\n    >\n      <code class=\"text-sm font-semibold my-2\">Number length</code>\n      <span class=\"bg-cyan-500 bg-opacity-30 p-1 rounded-b\">\n        {num.toString().length}\n      </span>\n    </div>\n    <div\n      class=\"flex-1 text-center bg-gray-800 rounded flex flex-col justify-between\"\n    >\n      <code class=\"text-sm font-semibold my-2\">Sum of Digits</code>\n      <span class=\"bg-cyan-500 bg-opacity-30 p-1 rounded-b\"\n        >{sumOfDigits(num)}</span\n      >\n    </div>\n    <div\n      class=\"flex-1 text-center bg-gray-800 rounded flex flex-col justify-between\"\n    >\n      <code class=\"text-sm font-semibold my-2\">Digital Root</code>\n      <span class=\"bg-cyan-500 bg-opacity-30 p-1 rounded-b\"\n        >{digitalRoot(num)}</span\n      >\n    </div>\n  </div>\n</BaseSection>\n","<script lang=\"ts\">\n  import { say } from \"@ampirzadeh/math\";\n\n  export let numb: number;\n  $: num = +numb;\n\n  import BaseSection from \"../../components/SectionBase.svelte\";\n</script>\n\n<BaseSection id=\"name\">\n  <h3 class=\"text-lg\" slot=\"title\">Name</h3>\n\n  <table slot=\"body\" class=\"w-full\">\n    <tbody class=\"bg-gray-800 divide-y divide-warm-gray-200\">\n      <tr>\n        <td\n          class=\"px-5 py-2 rounded-tl bg-cyan-500 bg-opacity-30 w-1/4 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n        >\n          <span class=\"text-xs md:(text-sm font-bold)\"> Short name </span>\n        </td>\n        <td class=\"px-6 py-2 rounded-tr\">\n          <span class=\"text-sm\">\n            {say(num, true)}\n          </span>\n        </td>\n      </tr>\n\n      <tr>\n        <td\n          class=\"px-5 py-2 rounded-bl bg-cyan-500 bg-opacity-30 w-1/4 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n        >\n          <span class=\"text-xs md:(text-sm font-bold)\"> Long name </span>\n        </td>\n        <td class=\"px-6 py-2 rounded-tr\">\n          <span class=\"text-sm\">\n            {say(num, false)}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</BaseSection>\n","<script lang=\"ts\">\n  import { engineeringNotation } from \"@ampirzadeh/math\";\n\n  export let numb: number;\n  $: num = +numb;\n  $: sciNo = num.toExponential().split(\"e+\");\n  $: engNo = Object.values(engineeringNotation(num));\n\n  import BaseSection from \"../../components/SectionBase.svelte\";\n</script>\n\n<BaseSection id=\"notation\">\n  <h3 class=\"text-lg\" slot=\"title\">Notation</h3>\n\n  <table slot=\"body\" class=\"w-full\">\n    <tbody class=\"bg-gray-800 divide-y divide-warm-gray-200\">\n      <tr>\n        <td\n          class=\"px-5 py-2 rounded-tl bg-cyan-500 bg-opacity-30 w-1/4 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n        >\n          <span class=\"text-xs md:(text-sm font-bold)\">\n            Scientific notation\n          </span>\n        </td>\n        <td class=\"px-6 py-2 rounded-tr\">\n          <span class=\"text-sm\">\n            {sciNo[0]} × 10\n            <sup>{sciNo[1]}</sup>\n          </span>\n        </td>\n      </tr>\n\n      <tr>\n        <td\n          class=\"px-5 py-2 rounded-bl bg-cyan-500 bg-opacity-30 w-1/4 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n        >\n          <span class=\"text-xs md:(text-sm font-bold)\">\n            Engineering notation\n          </span>\n        </td>\n        <td class=\"px-6 py-2 rounded-tr\">\n          <span class=\"text-sm\">\n            {engNo[0]} × 10\n            <sup>{engNo[1]}</sup>\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</BaseSection>\n","<script lang=\"ts\">\n  import { isPrime } from \"@ampirzadeh/math\";\n  import { liouvilleLambda } from \"@ampirzadeh/math\";\n\n  import { primeFactors, countOccurrences } from \"@ampirzadeh/math\";\n\n  export let numb: number;\n  $: num = +numb;\n  $: factors = primeFactors(num);\n  $: factorCount = countOccurrences(factors);\n  $: primeOrComp = isPrime(num) ? \"Prime\" : \"Composite\";\n  import BaseSection from \"../../components/SectionBase.svelte\";\n</script>\n\n<BaseSection id=\"prime-factorization\">\n  <h3 class=\"text-lg\" slot=\"title\">Prime Factorization</h3>\n\n  <div slot=\"body\">\n    <section\n      class=\"w-full bg-gradient-to-br from-cyan-500 to-cyan-900 pt-5 text-center text-lg rounded mb-5\"\n    >\n      <h3>\n        <strong class=\"font-bold\">\n          {#each Object.entries(factorCount) as [base, pow], i}\n            {base}\n            {#if pow.length > 1}\n              <sup>{pow.length}</sup>\n            {/if}\n            {#if i !== [...new Set(factors)].length - 1} × {/if}{/each}\n        </strong>\n      </h3>\n\n      <footer\n        class=\"bg-gradient-to-tr from bg-cyan-700 to-cyan-900 w-full text-right mt-5 px-2 rounded\"\n      >\n        <small>\n          {primeOrComp} Number\n        </small>\n      </footer>\n    </section>\n\n    <div class=\"flex flex-col gap-3 lg:flex-row flex-wrap\">\n      <div class=\"flex-1 rounded bg-gray-800 flex justify-between\">\n        <span class=\"w-3/4 m-2\"> Distinct Factors </span>\n        <span\n          class=\"text-cyan-50 bg-cyan-500 bg-opacity-30 rounded-r text-center flex-1 p-2\"\n        >\n          {Object.keys(factorCount).length}\n        </span>\n      </div>\n      <div class=\"flex-1 rounded bg-gray-800 flex justify-between\">\n        <span class=\"w-3/4 m-2\"> Total Factors </span>\n        <span\n          class=\"text-cyan-50 bg-cyan-500 bg-opacity-30 rounded-r text-center flex-1 p-2\"\n        >\n          {factors.length}\n        </span>\n      </div>\n      <div class=\"flex-1 rounded bg-gray-800 flex justify-between\">\n        <span class=\"w-3/4 m-2\"> Radical </span>\n        <span\n          class=\"text-cyan-50 bg-cyan-500 bg-opacity-30 rounded-r text-center flex-1 p-2\"\n        >\n          {Object.keys(factorCount)\n            .map((k) => +k)\n            .reduce((a, b) => a * b)}\n        </span>\n      </div>\n      <div class=\"flex-1 rounded bg-gray-800 flex justify-between\">\n        <span class=\"w-3/4 m-2\"> Liouville Lambda </span>\n        <span\n          class=\"text-cyan-50 bg-cyan-500 bg-opacity-30 rounded-r text-center flex-1 p-2\"\n        >\n          {liouvilleLambda(num)}\n        </span>\n      </div>\n    </div>\n\n    <p\n      class=\"relative pl-10 mt-4 before:(content-i bg-cyan-500 bg-opacity-30 rounded-1 block font-serif h-8 w-8 leading-8 absolute left-0 text-center)\"\n    >\n      The prime factorization of {num} is\n      {#each Object.keys(factorCount) as base, i}{base}\n        {#if i !== [...new Set(factors)].length - 1}\n          ×\n        {/if}{/each}. Since it has a total of {factors.length} prime factors, {num}\n      is a\n      {primeOrComp.toLocaleLowerCase()} number.\n    </p>\n  </div>\n</BaseSection>\n","<script lang=\"ts\">\n  import { allPositiveDivisors } from \"@ampirzadeh/math\";\n\n  export let numb: number;\n  $: num = +numb;\n  $: divisors = allPositiveDivisors(num);\n\n  import BaseSection from \"../../components/SectionBase.svelte\";\n</script>\n\n<BaseSection id=\"divisors\">\n  <h3 class=\"text-lg\" slot=\"title\">Divisors of {num}</h3>\n\n  <div slot=\"body\">\n    <p\n      class=\"bg-cyan-500 text-gray-900 w-full text-center py-4 mb-5 rounded relative after:(bg-cyan-500 -bottom-2 content absolute transform -translate-1/2 block w-5 h-5 rotate-45 left-1/2)\"\n    >\n      {divisors.join(\", \")}\n    </p>\n    <p class=\"text-center\">\n      <span class=\"text-cyan-400\"> {divisors.length}</span>\n      divisor{divisors.length === 1 ? \"\" : \"s\"}\n    </p>\n\n    <div class=\"flex flex-col gap-3 lg:flex-row flex-wrap mt-6\">\n      <div class=\"flex-1 rounded bg-gray-800 flex justify-between\">\n        <span class=\"w-3/4 m-2\"> Total Divisors </span>\n        <span\n          class=\"text-cyan-50 bg-cyan-500 bg-opacity-30 rounded-r text-center flex-1 p-2\"\n        >\n          {divisors.length}\n        </span>\n      </div>\n      <div class=\"flex-1 rounded bg-gray-800 flex justify-between\">\n        <span class=\"w-3/4 m-2\"> Arithmetic Mean </span>\n        <span\n          class=\"text-cyan-50 bg-cyan-500 bg-opacity-30 rounded-r text-center flex-1 p-2\"\n        >\n          {(divisors.reduce((a, b) => a + b) / divisors.length).toFixed(4)}\n        </span>\n      </div>\n      <div class=\"flex-1 rounded bg-gray-800 flex justify-between\">\n        <span class=\"w-3/4 m-2\"> Sum of Divisors </span>\n        <span\n          class=\"text-cyan-50 bg-cyan-500 bg-opacity-30 rounded-r text-center flex-1 p-2\"\n        >\n          {divisors.reduce((a, b) => a + b)}\n        </span>\n      </div>\n    </div>\n  </div>\n</BaseSection>\n","<script lang=\"ts\">\n  import { divisibility } from \"@ampirzadeh/math\";\n\n  export let numb: number;\n  $: num = +numb;\n  $: divis = divisibility(num);\n\n  const makeString = (arr: Array<any>) => {\n    if (arr.length === 1) return arr[0];\n    const firsts = arr.slice(0, arr.length - 1);\n    const last = arr[arr.length - 1];\n    return `${firsts.join(\", \")} and ${last}`;\n  };\n\n  import BaseSection from \"../../components/SectionBase.svelte\";\n</script>\n\n<BaseSection id=\"divisibility\">\n  <h3 class=\"text-lg\" slot=\"title\">Divisibility of {num}</h3>\n\n  <div slot=\"body\">\n    <table class=\"w-full\">\n      <tbody class=\"bg-gray-800\">\n        <tr>\n          <td\n            class=\"px-5 py-2 rounded-tl bg-cyan-500 bg-opacity-25 w-1/4 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n          >\n            <span class=\"text-xs md:(text-sm font-bold)\"> m </span>\n          </td>\n          {#each divis as di, i}\n            <td\n              class=\"px-6 py-2 text-center last-of-type:rounded-r\"\n              class:bg-gray-900={i % 2}\n              class:bg-opacity-85={i % 2 && !di.remainder}\n              class:bg-cyan-500={!di.remainder}\n              class:text-gray-900={!di.remainder}\n            >\n              <span class=\"text-sm\">\n                {di.number}\n              </span>\n            </td>\n          {/each}\n        </tr>\n\n        <tr>\n          <td\n            class=\"px-5 py-2 rounded-bl bg-cyan-500 bg-opacity-30 w-1/4 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n          >\n            <span class=\"text-xs md:(text-sm font-bold)\"> n mod m </span>\n          </td>\n\n          {#each divis as di, i}\n            <td\n              class=\"px-6 py-2 text-center last-of-type:rounded-r\"\n              class:bg-gray-900={i % 2}\n              class:bg-opacity-85={i % 2 && !di.remainder}\n              class:bg-cyan-400={!di.remainder}\n              class:text-gray-900={!di.remainder}\n            >\n              <span class=\"text-sm\">\n                {di.remainder}\n              </span>\n            </td>\n          {/each}\n        </tr>\n      </tbody>\n    </table>\n    <p\n      class=\"relative pl-10 mt-4 before:(content-i bg-cyan-500 bg-opacity-30 rounded-1 block font-serif h-8 w-8 leading-8 absolute left-0 text-center)\"\n    >\n      The number {num} is divisible by {makeString(\n        divis.filter((a) => !a.remainder).map((a) => a.number)\n      )}.\n    </p>\n  </div>\n</BaseSection>\n","<script lang=\"ts\">\n  export let numb: number;\n  $: num = +numb;\n  const bases = {\n    Binary: 2,\n    Ternary: 3,\n    Quaternary: 4,\n    Quinary: 5,\n    Senary: 6,\n    Octal: 8,\n    Decimal: 10,\n    Duodecimal: 12,\n    Hexadecimal: 16,\n    Vigesimal: 20,\n    Base36: 36,\n  };\n\n  import BaseSection from \"../../components/SectionBase.svelte\";\n</script>\n\n<BaseSection id=\"base-conversion\">\n  <h3 class=\"text-lg\" slot=\"title\">Base conversion ({num})</h3>\n\n  <table slot=\"body\" class=\"w-full\">\n    <thead class=\"bg-cyan-600\">\n      <th class=\"rounded-tl border-l-6 border-solid border-cyan-600\">Base</th>\n      <th>System</th>\n      <th class=\"rounded-tr\">Value</th>\n    </thead>\n    <tbody class=\"bg-gray-800 divide-y divide-warm-gray-200\">\n      {#each Object.entries(bases) as [bName, bNumber], i}\n        <tr>\n          <td\n            class=\"px-5 py-2 text-center bg-cyan-500 bg-opacity-30 w-1/8 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n          >\n            <span class=\"text-xs md:(text-sm font-bold)\"> {bNumber} </span>\n          </td>\n          <td class=\"px-5 py-2 w-1/4\">\n            <span class=\"text-xs md:(text-sm font-bold)\"> {bName} </span>\n          </td>\n          <td class=\"px-6 py-2 not-last:rounded-tl-none\">\n            <span class=\"text-sm\">\n              {num.toString(bNumber)}\n            </span>\n          </td>\n        </tr>\n      {/each}\n    </tbody>\n  </table>\n</BaseSection>\n","<script lang=\"ts\">\n  export let numb: number;\n  $: num = +numb;\n\n  import BaseSection from \"../../components/SectionBase.svelte\";\n</script>\n\n<BaseSection id=\"base-calculations\">\n  <h3 class=\"text-lg\" slot=\"title\">Base conversion ({num})</h3>\n\n  <div class=\"flex flex-col lg:flex-row flex-wrap gap-4\" slot=\"body\">\n    <table class=\"w-full\">\n      <thead class=\"bg-cyan-600\">\n        <th class=\"rounded-tl border-l-6 border-solid border-cyan-600\"\n          >Multiplication</th\n        >\n        <th class=\"rounded-tr text-right pr-3\">n.y</th>\n      </thead>\n      <tbody class=\"bg-gray-800 divide-y divide-warm-gray-200\">\n        {#each Array(5) as _, i}\n          <tr>\n            <td\n              class=\"px-5 py-2 text-center bg-cyan-500 bg-opacity-30 w-1/8 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n            >\n              <span class=\"text-xs md:(text-sm font-bold)\">\n                n × {i + 2}\n              </span>\n            </td>\n            <td class=\"px-5 py-2 w-1/4\">\n              <span class=\"text-xs md:(text-sm font-bold)\">\n                {num * (i + 2)}\n              </span>\n            </td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n    <table class=\"w-full\">\n      <thead class=\"bg-cyan-600\">\n        <th class=\"rounded-tl border-l-6 border-solid border-cyan-600\"\n          >Division</th\n        >\n        <th class=\"rounded-tr text-right pr-3\">n÷y</th>\n      </thead>\n      <tbody class=\"bg-gray-800 divide-y divide-warm-gray-200\">\n        {#each Array(5) as _, i}\n          <tr>\n            <td\n              class=\"px-5 py-2 text-center bg-cyan-500 bg-opacity-30 w-1/8 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n            >\n              <span class=\"text-xs md:(text-sm font-bold)\">\n                n ÷ {i + 2}\n              </span>\n            </td>\n            <td class=\"px-5 py-2 w-1/4\">\n              <span class=\"text-xs md:(text-sm font-bold)\">\n                {num / (i + 2)}\n              </span>\n            </td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n    <table class=\"w-full\">\n      <thead class=\"bg-cyan-600\">\n        <th class=\"rounded-tl border-l-6 border-solid border-cyan-600\"\n          >Exponentiation</th\n        >\n        <th class=\"rounded-tr text-right pr-3\">n <sup>y</sup></th>\n      </thead>\n      <tbody class=\"bg-gray-800 divide-y divide-warm-gray-200\">\n        {#each Array(5) as _, i}\n          <tr>\n            <td\n              class=\"px-5 py-2 text-center bg-cyan-500 bg-opacity-30 w-1/8 border-l-6 border-solid border-cyan-600 transition-all duration-200 hover:pl-6\"\n            >\n              <span class=\"text-xs md:(text-sm font-bold)\">\n                n <sup> {i + 2} </sup>\n              </span>\n            </td>\n            <td class=\"px-5 py-2 w-1/4\">\n              <span class=\"text-xs md:(text-sm font-bold)\">\n                {Math.pow(num, i + 2)}\n              </span>\n            </td>\n          </tr>\n        {/each}\n      </tbody>\n    </table>\n  </div>\n</BaseSection>\n","<script lang=\"ts\">\n  import Summary from \"./sections/Summary.svelte\";\n  import Properties from \"./sections/Properties.svelte\";\n  import Name from \"./sections/Name.svelte\";\n  import Notation from \"./sections/Notation.svelte\";\n  import PrimeFactorization from \"./sections/PrimeFactorization.svelte\";\n  import Divisors from \"./sections/Divisors.svelte\";\n  import Divisibility from \"./sections/Divisibility.svelte\";\n  import BaseConversion from \"./sections/BaseConversion.svelte\";\n  import BaseCalculations from \"./sections/BaseCalculations.svelte\";\n\n  export let params: { num?: string } = {};\n  const sections = [\n    Summary,\n    Properties,\n    Name,\n    Notation,\n    PrimeFactorization,\n    Divisors,\n    Divisibility,\n    BaseConversion,\n    BaseCalculations,\n  ];\n</script>\n\n{#each sections as section}\n  <svelte:component this={section} numb={params.num} />\n{/each}\n","import NotFound from \"./pages/Home.svelte\";\nimport Home from \"./pages/Home.svelte\";\nimport Num from \"./pages/Num.svelte\";\nexport default {\n    \"/\": Home,\n    \"/:num\": Num,\n    \"*\": NotFound,\n};\n","<script lang=\"ts\">\n  import { location } from \"svelte-spa-router\";\n\n  $: isAtHome = $location === \"/\";\n  $: LINK = isAtHome ? window.location.host : \"/\";\n  $: LINK_TEXT = isAtHome ? \"ampirzadeh's\" : \"Home\";\n  $: TITLE = isAtHome ? \"Numbers\" : $location.replace(\"/\", \"\");\n  // $: num = +$location.replace(/\\D/g, \"\");\n\n  // let num: number = +params.num;\n</script>\n\n<header class=\"text-center py-12 mx-auto\">\n  <a href={LINK} class=\"text-sm font-semibold mb-2 font-mono\">\n    {LINK_TEXT}\n  </a>\n  <h1\n    class=\"font-extrabold tracking-wide text-6xl text-cyan-500 w-auto leading-tight\"\n  >\n    {TITLE}\n  </h1>\n\n  <!-- <form on:submit={() => push(`/${num}`)}>\n    <input class=\"text-black\" type=\"text\" bind:value={num} />\n\n    <button type=\"submit\">H</button>\n  </form> -->\n</header>\n","<script lang=\"ts\">\n  import Router from \"svelte-spa-router\";\n  import routes from \"./routes\";\n\n  import Hero from \"./components/Hero.svelte\";\n  // import Debug from \"./components/Debug.svelte\";\n</script>\n\n<Hero />\n<!-- <Debug /> -->\n<main class=\"px-4 w-full sm:w-4/5 2xl:w-1/2 mx-auto\">\n  <Router {routes} />\n</main>\n\n<style\n  global\n  windi:global\n  windi:preflights:global\n  windi:safelist:global\n  lang=\"postcss\">\n  body {\n    @apply bg-warm-gray-900 text-gray-50;\n  }\n  /* .debug *:not(body):not(html) {\n    @apply border-red-600 border border-solid;\n  }\n  .btn {\n    @apply !border-none outline-none py-2 px-4 font-semibold rounded-lg shadow-md transition-all duration-300;\n  }\n  .btn:focus,\n  .btn:focus-within {\n    @apply outline-none;\n  } */\n</style>\n","import App from \"./App.svelte\";\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","$$","bubbles","e","createEvent","initCustomEvent","custom_event","call","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","push","flushing","seen_callbacks","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","get_spread_update","levels","updates","to_null_out","accounted_for","n","key","get_spread_object","spread_props","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","readable","start","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","getLocation","hashPosition","location","href","substr","qsPosition","querystring","loc","$loc","params","link","opts","linkOpts","tagName","toLowerCase","updateLink","updated","charAt","preventDefault","disabled","history","replaceState","state","__svelte_spa_router_scrollX","scrollX","__svelte_spa_router_scrollY","scrollY","hash","scrollstateHistoryHandler","currentTarget","val","routes","prefix","restoreScrollState","RouteItem","constructor","path","_sveltesparouter","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","parse","conditions","userData","_pattern","_keys","match","startsWith","matches","exec","out","decodeURIComponent","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","popStateChanged","scrollTo","lastLoc","componentObj","unsubscribeLoc","newLoc","checkConditions","loading","loadingParams","loaded","default","onDestroy","scrollRestoration","numb","round","random","$","selector","querySelector","extend","args","cumulativeOffset","top","left","offsetTop","offsetLeft","offsetParent","directScroll","body","scrollTop","inSetter","documentElement","pageYOffset","scrollLeft","pageXOffset","defaultOptions","container","duration","delay","offset","easing","t","pow","onStart","onDone","onAborting","_scrollTo","x","y","cumulativeOffsetContainer","_","cumulativeOffsetTarget","initialX","initialY","targetX","targetY","diffX","diffY","scrolling","started","start_time","end_time","delayStart","progress","scrollToTopLeft","fulfill","loop","scrollto","scrollToFunc","proceedOptions","current","handle","toLocaleLowerCase","formatted","say","parity","numberOfDigits","primarity","sciNo","sumOfDigits","nOfPrimeFactors","primeFactorsS","nOfPositiveDivisors","positiveDivisorsS","coPrimesIsAre","format","nOfCoPrimes","coPrimeS","toString","S","formatter","Intl","NumberFormat","num","primeFact","primeFactors","positiveDiv","allPositiveDivisors","coPr","coprime","info","isPrime","toExponential","defineProperty","exports","digit","parseInt","reduce","num1","num2","gcd","coprimes","unique","divisors","floor","sqrt","sort","short","ones","tens","teens","convertTens","convertHundreds","convertThousands","convertMillions","convertBillions","convertTrillions","convertQuadrillions","replace","boundary","digitalRoot","base","parseFloat","power","nums","totalValue","currentValue","aliquot","sum","number","remainder","id","engNo","engineeringNotation","liouvilleLambda","entries","factors","factorCount","countOccurrences","primeOrComp","join","toFixed","divis","divisibility","firsts","last","Binary","Ternary","Quaternary","Quinary","Senary","Octal","Decimal","Duodecimal","Hexadecimal","Vigesimal","Base36","sections","Summary","Properties","Name","Notation","PrimeFactorization","Divisors","Divisibility","BaseConversion","BaseCalculations","Home","NotFound","isAtHome","$location","LINK","host","LINK_TEXT","TITLE"],"mappings":"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"}